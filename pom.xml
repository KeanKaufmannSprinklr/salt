<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
	<artifactId>salt</artifactId>
	<packaging>pom</packaging>
	<version>2.1.1</version>
	<modules>
		<module>salt-graph</module>
		<module>salt-saltCore</module>
		<module>salt-saltCommon</module>
	</modules>
	<description>Salt is an abstract and graph based meta model for dealing with linguistic annotated data. Salt describes a minimum of semantic and only handles the structure of linguistic data.</description>
	<url>https://korpling.german.hu-berlin.de/p/projects/salt</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/korpling/salt/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://korpling.german.hu-berlin.de/jenkins/</url>
	</ciManagement>
	<inceptionYear>2009</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git://github.com/korpling/salt.git</connection>
		<developerConnection>scm:git:git@github.com:korpling/salt.git</developerConnection>
		<url>https://github.com/korpling/salt</url>
	  <tag>salt-2.1.1</tag>
  </scm>
	<distributionManagement>
		<repository>
			<id>korpling</id>
			<name>korpling maven repo</name>
			<url>file:///srv/www/maven2/</url>
			<!-- <url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url> -->
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>korpling</id>
			<name>korpling maven repo</name>
			<url>http://korpling.german.hu-berlin.de/maven2</url>
		</repository>
	</repositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<component.descriptor.name>serviceComponents.xml</component.descriptor.name>
		<bundle.file>${project.groupId}.${project.artifactId}_${project.version}.jar</bundle.file>
		<assemblies.name>src/assemble/assemblies.xml</assemblies.name>
		<license.file>${basedir}/LICENSE</license.file>
		<notice.file>${basedir}/NOTICE</notice.file>
		<java.version>1.7</java.version>
		<xmlunit.version>1.3</xmlunit.version>
		<junit.version>4.11</junit.version>
		<emf.version>2.9.1-v20130827-0309</emf.version>
		<guava.version>14.0.1</guava.version>
		<slf4j.version>1.7.5</slf4j.version>
		<commons.lang3.version>3.3.2</commons.lang3.version>
		<maven-bundle-plugin.version>2.5.3</maven-bundle-plugin.version>
		<!-- <maven-bundle-plugin.version>2.1.0</maven-bundle-plugin.version>-->
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-site-plugin.version>3.4</maven-site-plugin.version>
		<maven-assembly-plugin.version>2.5.1</maven-assembly-plugin.version>
		<maven-release-plugin.version>2.5.1</maven-release-plugin.version>
		<maven-javadoc-plugin.version>2.10.1</maven-javadoc-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
		<maven-license-plugin.version>1.4.0</maven-license-plugin.version>
		<maven-notice-plugin.version>1.0.4</maven-notice-plugin.version>
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>${xmlunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>${emf.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>${emf.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore.xmi</artifactId>
			<version>${emf.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang3.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<organization>
		<name>Humboldt-Universit√§t zu Berlin, INRIA</name>
	</organization>
	<build>
		<extensions>
			<!-- Enabling the use of FTP -->
			<!-- <extension> <groupId>org.apache.maven.wagon</groupId> <artifactId>wagon-ssh-external</artifactId> 
				<version>1.0</version> </extension> -->
		</extensions>
		<plugins>
			<!-- a plugin to clean the project when calling mvn clean (removes META-INF 
				and OSGI-INF) -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>META-INF</directory>
							<directory>_TMP</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- generate a jar for sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- start: site plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<outputDirectory>${basedir}/docs/site</outputDirectory>
				</configuration>
			</plugin>
			<!-- end: site plugin -->
			<!-- start: assembly plugin -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>${assemblies.name}</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
					<finalName>${project.groupId}.salt.${project.artifactId}_${project.version}</finalName>
					<outputDirectory>target/distribution</outputDirectory>
					<workDirectory>target/assembly/work</workDirectory>
				</configuration>
			</plugin>
			<!-- end: assembly plugin -->
			<!-- start: Plugin for automatic releasing -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>perform</goal>
						</goals>
						<configuration>
							<pomFileName>salt/pom.xml</pomFileName>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<releaseProfiles>release</releaseProfiles>
					<goals>package assembly:single deploy</goals>
				</configuration>
			</plugin>
			<!-- end: Plugin for automatic releasing -->
			<!-- start: plugin to generate javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
			</plugin>
			<!-- end: plugin to generate javadoc -->
			<!-- start: plugin to deploy project to maven repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>
			<!-- end: plugin to deploy project to maven repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- start: for generating license headers in source files. Run mvn license:format -->
			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>${maven-license-plugin.version}</version>
				<configuration>
					<header>${basedir}/src/etc/header.txt</header>
					<includes>
						<include>src/main/java/**</include>
						<include>src/test/java/**</include>
					</includes>
				</configuration>
			</plugin>
			<!-- end: for generating license headers in source files. Run mvn license:format -->
			<!-- start: creates a NOTICE file use mvn notice:generate -->
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<version>${maven-notice-plugin.version}</version>
				<configuration>
					<noticeTemplate>./src/etc/NOTICE_template.txt</noticeTemplate>
					<licenseMapping>
						<param>https://source.jasig.org/licenses/license-mappings.xml</param>
						<param>https://korpling.german.hu-berlin.de/saltnpepper/misc/license-mappings.xml</param>
					</licenseMapping>
				</configuration>
			</plugin>
			<!-- end: creates a NOTICE file use mvn notice:generate -->
			<!-- start: of docbook plugin -->
			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<version>2.0.14</version>
				<executions>
					<execution>
						<id>pdf</id>
						<goals>
							<goal>generate-pdf</goal>
						</goals>
						<configuration>
							<!-- <sourceDirectory>${project.build.directory}/docbkx</sourceDirectory> -->
							<sourceDirectory>${project.basedir}/src/main/docbkx</sourceDirectory>
							<targetDirectory>${project.build.directory}/manual</targetDirectory>
							<targetFileExtension>${project.version}.pdf</targetFileExtension>
							<includes>manual.xml</includes>
							<foCustomization>${basedir}/src/main/docbkx/custom.xsl</foCustomization>
							<highlightSource>true</highlightSource>
							<admonGraphics>true</admonGraphics>
							<admonGraphicsPath>${basedir}/src/main/docbkx/images/docbook/</admonGraphicsPath>
							<admonGraphicsExtension>.svg</admonGraphicsExtension>
							<useSvg>true</useSvg>
							<useExtensions>true</useExtensions>
							<sectionAutolabel>true</sectionAutolabel>
							<!-- font configuration -->
							<bodyFontFamily>DejaVu Serif</bodyFontFamily>
							<monospaceFontFamily>DejaVu Sans Mono</monospaceFontFamily>
							<titleFontFamily>DejaVu Sans</titleFontFamily>
							<fonts>
								<font>
									<name>DejaVu Sans Mono</name>
									<style>normal</style>
									<weight>normal</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSansMono.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSansMono-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Serif</name>
									<style>normal</style>
									<weight>normal</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSerif.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSerif-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Serif</name>
									<style>italic</style>
									<weight>normal</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSerif-Italic.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSerif-Italic-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Serif</name>
									<style>normal</style>
									<weight>bold</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSerif-Bold.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSerif-Bold-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Serif</name>
									<style>italic</style>
									<weight>bold</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSerif-BoldItalic.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSerif-BoldItalic-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Sans</name>
									<style>normal</style>
									<weight>bold</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSans-Bold.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSans-Bold-metrics.xml</metricsFile>
								</font>
								<font>
									<name>DejaVu Sans</name>
									<style>normal</style>
									<weight>normal</weight>
									<embedFile>${basedir}/src/main/fonts/DejaVuSans.ttf</embedFile>
									<metricsFile>${project.build.directory}/fonts/DejaVuSans-metrics.xml</metricsFile>
								</font>
							</fonts>
						</configuration>
						<phase>site</phase>
					</execution>
					<execution>
						<id>html</id>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.build.directory}/docbkx</sourceDirectory>
							<targetDirectory>${project.build.directory}/manual</targetDirectory>
							<targetFileExtension>${project.version}.html</targetFileExtension>
							<includes>manual.xml</includes>
							<highlightSource>true</highlightSource>
							<admonGraphics>true</admonGraphics>
							<admonGraphicsPath>${basedir}/src/main/docbkx/images/docbook/</admonGraphicsPath>
							<admonGraphicsExtension>.svg</admonGraphicsExtension>
							<useSvg>true</useSvg>
							<useExtensions>true</useExtensions>
							<preProcess>
								<copy todir="${project.build.directory}/manual/images">
									<fileset dir="${basedir}/src/main/docbkx/images">
									</fileset>
								</copy>
							</preProcess>
						</configuration>
						<phase>site</phase>
					</execution>
				</executions>
				<configuration>
					<xincludeSupported>true</xincludeSupported>
				</configuration>

			</plugin>

			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-fop-support</artifactId>
				<version>2.0.14</version>
				<executions>
					<execution>
						<phase>pre-site</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<sourceDirectory>${basedir}/src/main/fonts/</sourceDirectory>
							<ansi>false</ansi>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-filter-docbook</id>
						<phase>pre-site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/docbkx</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/docbkx/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>



		</plugins>
		<finalName>${project.groupId}.${project.artifactId}_${project.version}</finalName>
	</build>
	<name>${project.groupId}.${project.artifactId}</name>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
	</reporting>
</project>
