<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>salt-core</artifactId>
	<packaging>bundle</packaging>
	<parent>
		<groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
		<artifactId>saltSimple</artifactId>
		<version>3.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<properties>
		<nv-i18n.version>1.1</nv-i18n.version>
		<textcat.version>1.0.1</textcat.version>
		<slf4j.version>1.7.5</slf4j.version>
		<guava.version>14.0.1</guava.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- iso language codes -->
		<dependency>
			<groupId>com.neovisionaries</groupId>
			<artifactId>nv-i18n</artifactId>
			<version>${nv-i18n.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- automatic language detection -->
		<dependency>
			<groupId>org.knallgrau</groupId>
			<artifactId>textcat</artifactId>
			<version>${textcat.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Logging framework -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<manifestLocation>${basedir}/META-INF</manifestLocation>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<instructions>
						<Bundle-Name>${project.artifactId}</Bundle-Name>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId};singleton:=true</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<Bundle-RequiredExecutionEnvironment>JavaSE-${java.version}</Bundle-RequiredExecutionEnvironment>
						<!-- <Import-Package> !de.hu_berlin.german.korpling.saltnpepper.salt.saltCore.*,* 
							</Import-Package> <Export-Package> de.hu_berlin.german.korpling.saltnpepper.salt.saltCore.* 
							</Export-Package> <Include-Resource>{maven-resources}, LICENSE, NOTICE</Include-Resource> -->
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.4</version>
							<configuration>
								<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
							</configuration>
							<reports>
								<report>index</report>
								<report>summary</report>
								<report>license</report>
							</reports>
						</plugin>

						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>2.5.3</version>
							<configuration>
								<excludeFilterFile>${basedir}/src/findbugs/excludeFilter.xml</excludeFilterFile>
							</configuration>
						</plugin>


					</reportPlugins>
				</configuration>
			</plugin>













			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Build doesn't fail if problems are found -->
					<failOnError>false</failOnError>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<!-- Configures the directory in which the XML report is created -->
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
					<excludeFilterFile>${basedir}/src/findbugs/excludeFilter.xml</excludeFilterFile>
				</configuration>
				<executions>
					<!-- Ensures that FindBugs inspects source code when project is compiled. -->
					<execution>
						<id>analyze-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<transformationSets>
						<transformationSet>
							<!-- Configures the source directory of XML files. -->
							<dir>${project.build.directory}/findbugs</dir>
							<!-- Configures the directory in which the FindBugs report is written. -->
							<outputDir>${project.build.directory}/findbugs</outputDir>
							<!-- Selects the used stylesheet. -->
							<!-- <stylesheet>fancy-hist.xsl</stylesheet> -->
							<stylesheet>default.xsl</stylesheet>
							<!--<stylesheet>plain.xsl</stylesheet> -->
							<!--<stylesheet>fancy.xsl</stylesheet> -->
							<!--<stylesheet>summary.xsl</stylesheet> -->
							<fileMappers>
								<!-- Configures the file extension of the output files. -->
								<fileMapper
									implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.html</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
					</transformationSets>
				</configuration>
				<executions>
					<!-- Ensures that the XSLT transformation is run when the project is 
						compiled. -->
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>transform</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>findbugs</artifactId>
						<version>2.0.1</version>
					</dependency>
				</dependencies>
			</plugin>






		</plugins>
	</build>
</project>
